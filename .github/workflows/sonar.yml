name: Sonar

on:
  workflow_dispatch:
  push:
    branches:
      - main  # the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Choose the Python version you need

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Poetry packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: ${{ runner.os }}-poetry

      - name: Install Poetry dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          poetry run python script.py  # Replace this with the actual command you need to run
